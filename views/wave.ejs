<html lang="en" class="no-js"ng-app="myApp"><head>

		<meta charset="UTF-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge"> 
		<meta name="viewport" content="width=device-width, initial-scale=1"> 
		<title>Monument</title>
	<link rel='shortcut icon' href='favicon.ico' type='image/x-icon'/ >
	<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/angular_material/1.0.0-rc1/angular-material.min.css">
	<link rel="stylesheet" type="text/css" href="/css/demo.css">
	<link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
	<style type="text/css">
	.md-button.md-raised:not([disabled]) {
    	box-shadow: 0 0px 2px 0 rgba(0,0,0,.26);
	}
</style>

	</head>
	<body style="background:#fff;" ng-controller="AppCtrl">
		<md-progress-linear md-mode="indeterminate" ng-show="isLoading"></md-progress-linear>
		<div class="bar-rainbow"></div>  
		<form style="margin:0 5px;">
		    <div layout="row" style="position: fixed;z-index: 99;background: #fff;width: 100%;box-shadow: 1px 1px 6px 1px #E4E4E4;">
		      <md-input-container>
		        <label>Select Group</label>
		        <md-select style="width: 140px;" ng-model="post.group">
		          <md-option ng-repeat="group in groups" value="{{group._id}}">{{group.name}}</md-option>
		        </md-select>
		      </md-input-container>
		  	
		 
			<input ng-model="post.url" style="display:none !important;" id="url" type="text" />
			<input ng-model="post.title" style="display:none !important;" id="title" type="text" />
			<input ng-model="post.description" style="display:none !important;" id="description" type="text" />
			<input ng-model="post.image" style="display:none !important;" id="image" type="text" />
			<input ng-model="post.group" style="display:none !important;" id="group" type="text" />
			<button style="margin-top: 19px;" class="md-raised md-button md-ink-ripple" ng-click="addPost()">
				Save Page
			</button>
			</div>
		</form>
	<section class="demo-container md-whiteframe-z1 show-source">
  <md-content>
  

  <section style="margin-top: 61px;">
  	 
	 <md-list role="list">
	 <md-subheader class="md-primary">Recently saved</md-subheader>
	   <md-list-item style="margin: 0 auto;padding-left: 20px;padding-right: 20px;"
            class="list-group-item md-3-line md-no-proxy ng-scope" my-repeat-directive ng-repeat="post in posts | orderBy:'-created' | limitTo:10 " ng-animate=" 'animate' " role="listitem">
	    <div class="md-list-item-text">
	    	<div style="display:none !important;">{{post.group}}</div>
	       <a style="text-decoration: none;" id="url" href="{{post.url}}">
	       	<h3 class="ng-binding item" id="{{ post._id }}" draggable item="item">{{post.title}}</h3></a>
	      <h4 class="ng-binding">{{post.created | date}} - {{post.url | domain}}</h4>
<div class="post-icons">

   	 <!-- ng-change="addToGroup()" -->
			
	          <ng-md-icon ng-show="!post.favorite" icon="favorite_outline" md-font-library="material-icons" size="20" ng-click="favoritePost(post._id)">
			    <md-tooltip>
			        favorite
			      </md-tooltip>
			  </ng-md-icon>
			  <ng-md-icon ng-show="post.favorite" style="fill: #FF38E0;" icon="favorite" md-font-library="material-icons" size="20" ng-click="removeFavorite(post._id)">
			    <md-tooltip>
			        remove
			      </md-tooltip>
			  </ng-md-icon>
			  <ng-md-icon ng-show="!post.readlater" icon="bookmark_outline" md-font-library="material-icons" size="20" ng-click="readLater(post._id)">
			    <md-tooltip>
			        Reading List
			      </md-tooltip>
			  </ng-md-icon>
			  <ng-md-icon ng-show="post.readlater" icon="done" md-font-library="material-icons" size="20" ng-click="markAsRead(post._id)">
			    <md-tooltip>
			        Mark as read
			      </md-tooltip>
			  </ng-md-icon>
	        <ng-md-icon ng-if="showRemovePost.active" ng-click="addToGroup(post._id, showRemovePost.group); getPostss()" md-font-library="material-icons" size="20" icon="highlight_remove">
		      <md-tooltip>
		        Remove from Folder
		      </md-tooltip>
		  	</ng-md-icon>

		      <ng-md-icon ng-click="remove(post._id)" md-font-library="material-icons" size="20" icon="delete">
		      <md-tooltip>
		        Delete
		      </md-tooltip>
		  	</ng-md-icon>
		  </div> <!-- icons end -->
	    </div>
	  </md-list-item>
	 </md-list>
	</section>
	</md-content>
</section>

	<script src="//code.jquery.com/jquery-1.11.3.min.js"></script>
	<script src="//ajax.googleapis.com/ajax/libs/angularjs/1.5.0-beta.1/angular.min.js"></script>
	<script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.7/angular-animate.min.js"></script>
	  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.7/angular-aria.min.js"></script>
	  <script src="//cdnjs.cloudflare.com/ajax/libs/angular-material-icons/0.6.0/angular-material-icons.min.js"></script> 
	  <script src="https://ajax.googleapis.com/ajax/libs/angular_material/1.0.0-rc1/angular-material.min.js"></script>
	  <script src="//cdnjs.cloudflare.com/ajax/libs/angular-ui-router/0.2.8/angular-ui-router.min.js"></script>

	  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.4.7/angular-resource.min.js"></script>
	  <script src="https://rawgithub.com/angular-ui/ui-sortable/master/src/sortable.js"></script>
	<script src="controllers/controller.js"></script>

	<script type="text/javascript">

	var setInputs = function() {
		var hashContent = window.location.hash.split('/?/');

		if (hashContent[0]) {
			var image = hashContent[0].slice(7);
		}
		if (hashContent[1]) {
			var title = hashContent[1].slice(6);
		}
		if (hashContent[2]) {
			var description = hashContent[2].slice(12);
		}

		var parenturl = (window.location != window.parent.location)
        ? document.referrer
        : document.location;

		$('input#url').val(parenturl);
		$('input#url').change();

		$('input#image').val(image);
		$('input#image').change();

		$('input#title').val(title);
		$('input#title').change();

		$('input#description').val(description);
		$('input#description').change();

		$('input#group').change();
	}
	$('button').click(function(){
		setInputs();
	});


	</script>

	

<script>
var optionsInterval = setInterval(function(){
	if($('div.cs-options')[0] === undefined) {
		(function() {
			[].slice.call( document.querySelectorAll( 'select.cs-select' ) ).forEach( function(el) {	
				new SelectFx(el, {
					stickyPlaceholder: false,
					onChange: function(val){
						document.querySelector('span.cs-placeholder').style.backgroundColor = val;
					}
				});
			} );
		})();
	}

}, 500);

setTimeout(function(){
	if($('div.cs-options')[0]) {
		clearInterval(optionsInterval);
	}
}, 1000);

$('#url').each(function(){
	var self = this;
	$(self).click(function(){
		return false;
		var url = $(self).attr('href');
		window.top.location.href = url;
	});
})
</script>
</body></html>